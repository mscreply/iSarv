@page "{testId:int}"
@model iSarv.Areas.Test.Pages.Clifton.Result

@{
    ViewData["Title"] = @Localizer.Text("Clifton Result");
}

<h4>@ViewData["Title"]</h4>

@{ var colorStyles = new[] { "table-success", "table-warning", "table-danger", "table-primary" }; }
<table class="table mt-4">
    <thead>
    <tr>
        <th>@Localizer.Text("Clifton Domain")</th>
        <th>@Localizer.Text("Total Score")</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var domain in Model.Score)
    {
        int totalScore = domain.Value.Values.Sum();
        <tr>
            <td>@Localizer.TextIgnoreCase(domain.Key.ToDescription())</td>
            <td>@totalScore</td>
        </tr>
        <tr>
            <td colspan="2">
                <table class="table table-sm table-striped @colorStyles[Model.Score.Keys.ToList().IndexOf(domain.Key)]">
                    <thead>
                    <tr>
                        <th>@Localizer.Text("Clifton Theme")</th>
                        <th>@Localizer.Text("Score")</th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var theme in domain.Value)
                    {
                        <tr>
                            <td>@Localizer.TextIgnoreCase(theme.Key.ToDescription())</td>
                            <td>@theme.Value</td>
                        </tr>
                    }
                    </tbody>
                </table>
            </td>
        </tr>
    }
    </tbody>
</table>

<h5 class="mt-4">
    @Localizer.Text("Result")
    @if (!Model.CliftonTest.IsConfirmed)
    {
        <span class="text-danger small">( @Localizer.TextIgnoreCase("This result was generated by AI and has not been reviewed and confirmed by Psychologist.") )</span>
    }
    @if (Model.CliftonTest.Result == "Wait for AI")
    {
        <a href="javascript:window.location.reload(true)" class="btn btn-primary">@Localizer.Text("Get Result from AI")</a>
    }
</h5>
<p class="content-multiline">@Model.CliftonTest.Result</p>

@if (!string.IsNullOrEmpty(Model.AIError))
{
    <div class="d-none">@Model.AIError</div>
}